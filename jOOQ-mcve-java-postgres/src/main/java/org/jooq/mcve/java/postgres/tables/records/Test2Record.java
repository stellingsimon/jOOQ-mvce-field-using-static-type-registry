/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.java.postgres.tables.records;


import org.jooq.Record1;
import org.jooq.customtypes.MyName;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.mcve.java.postgres.tables.Test2;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Test2Record extends UpdatableRecordImpl<Test2Record> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mcve.test2.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>mcve.test2.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>mcve.test2.cd</code>.
     */
    public void setCd(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>mcve.test2.cd</code>.
     */
    public Integer getCd() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>mcve.test2.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mcve.test2.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mcve.test2.name_converted</code>.
     */
    public void setNameConverted(MyName value) {
        set(3, value);
    }

    /**
     * Getter for <code>mcve.test2.name_converted</code>.
     */
    public MyName getNameConverted() {
        return (MyName) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Test2Record
     */
    public Test2Record() {
        super(Test2.TEST2);
    }

    /**
     * Create a detached, initialised Test2Record
     */
    public Test2Record(Integer id, Integer cd, String name, MyName nameConverted) {
        super(Test2.TEST2);

        setId(id);
        setCd(cd);
        setName(name);
        setNameConverted(nameConverted);
        resetChangedOnNotNull();
    }
}
